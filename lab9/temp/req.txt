A)
Реализовать задачу с учетом разделения вычислений между несколькими процессами на языке программирования C.
Для обмена  информацией между процессами использовать неименованный канал. 

Задача: "В строке символов S заменить каждый ai-й символ на bi символ. 
Входные данные: целое положительное число n, пары символов (a1, b1), (a2, b2), … (an, bn), строка символов S произвольной длины. 
Использовать n или n+1 процессов для решения задачи. "

добавьте  обработку ошибок для ввода, чтобы избежать сбоев, если пользователь введет некорректные данные.
Создайте для коммуникации только 1 канал.
Для хранения символов для замены используйте два массива char a[MAX_REPLACEMENTS], b[MAX_REPLACEMENTS]
Использовать n или n+1 процессов для решения задачи для каждой замены.
Дочерние процессы должны находить индексы в исходной строке на место которых нужно вставить символ для замены и записывать это в канал в следующем порядке: символ, количество замен, индексы.
После завершения дочерих процессов в родительский процесс должен обработать данную информацию от дочерних процессов и вывести исходную строку на экран.
используйте для обработки ошибок конструкцию printf и return 1;

Б)
Реализовать задачу с учетом разделения вычислений между несколькими процессами на языке программирования C.
Для обмена информацией между процессами использовать именованный канал. 

Задача: "Вычислить скалярное произведение вектора А на вектор B. Входные данные первого приложения: элементы массива чисел А фиксированной размерности. Входные данные второго приложения: массив чисел B, той же размерности, что и массив А."

работа происходит с целыми цислами.
элементы массивов должны вводиться в качестве аргументов для main.
Второе приложение должно создавать канал и ждать данные от первого приложения.
Первое приложение посылает данные второму приложению в формате размер массива, элементы массива.
Дальше происходят вычисления во втором приложении и вывод результата.

Вычисление должны осуществляться во втором приложении.
используйте для обработки ошибок конструкцию printf и return 1;

Используйте следующее:
arrayA = (int*)malloc(size * sizeof(int));    
arrayB = (int*)malloc(size * sizeof(int));
printf("Введите элемент №%d массива A: ", i + 1);
